from sqlalchemy.orm import Session
from sqlalchemy import text, select

from database.base import engine, Base
from database.models import Categories, Products
from database.models import Orders


def create_db():
    """–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""

    with engine.connect() as conn:
        # conn.execute(text("DROP SCHEMA IF EXISTS public CASCADE"))
        conn.execute(text("CREATE SCHEMA IF NOT EXISTS public"))
        conn.commit()

    print("–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö üìó")

    Base.metadata.create_all(engine)

    categories = ("–¢–æ—Ä—Ç—ã" , "–ó–µ—Ñ–∏—Ä", "–ü–∏—Ä–æ–∂–Ω—ã–µ")
    products = (
    ("–¢–æ—Ä—Ç—ã", "–ú–µ–¥–æ–≤–∏–∫", 60, "–ú–µ–¥–æ–≤—ã–µ –∫–æ—Ä–∂–∏ —Å–æ —Å–º–µ—Ç–∞–Ω–Ω—ã–º –∏–ª–∏ –∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–º –∫—Ä–µ–º–æ–º, —è–≥–æ–¥–Ω—ã–º –∫–æ–Ω—Ñ–∏, –æ—Ä–µ—Ö–∞–º–∏ –∏ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–∞–º–∏", "media/cakes/cake1.jpg"),
    ("–¢–æ—Ä—Ç—ã", "–ú–æ–ª–æ—á–Ω–∞—è –¥–µ–≤–æ—á–∫–∞", 60, "–í–æ–∑–¥—É—à–Ω—ã–µ –∫–æ—Ä–∂–∏ –Ω–∞ —Å–≥—É—â—ë–Ω–Ω–æ–º –º–æ–ª–æ–∫–µ —Å–æ —Å–ª–∏–≤–æ—á–Ω—ã–º –∫—Ä–µ–º–æ–º, —è–≥–æ–¥–Ω—ã–º –∫–æ–Ω—Ñ–∏", "media/cakes/cake2.jpg"),
    ("–¢–æ—Ä—Ç—ã", "–ö—Ä–∞—Å–Ω—ã–π –±–∞—Ä—Ö–∞—Ç", 60, "–®–æ–∫–æ–ª–∞–¥–Ω—ã–π –±–∏—Å–∫–≤–∏—Ç —Å–æ —Å–ª–∏–≤–æ—á–Ω–æ-—Ç–≤–æ—Ä–æ–∂–Ω–æ–º –∫—Ä–µ–º–æ–º –∏ —è–≥–æ–¥–Ω—ã–º –∫–æ–Ω—Ñ–∏", "media/cakes/cake3.jpg"),
    ("–ó–µ—Ñ–∏—Ä", "–§—Ä—É–∫—Ç–æ–≤–æ-—è–≥–æ–¥–Ω—ã–π", 30, "–ù–µ–∂–Ω–µ–π—à–∏–π —Ü–≤–µ—Ç–æ—á–Ω—ã–π –∑–µ—Ñ–∏—Ä, —Ç–∞—è—â–∏–π –≤–æ —Ä—Ç—É –∏–∑ —Ñ—Ä—É–∫—Ç–æ–≤–æ-—è–≥–æ–¥–Ω–æ–π –Ω–∞—á–∏–Ω–∫–∏", "media/marshmallows/marshmallow1.jpg"),
    ("–ó–µ—Ñ–∏—Ä", "–ö–æ–∫–æ—Å–æ–≤—ã–π", 30, "–ù–µ–∂–Ω–µ–π—à–∏–π —Ü–≤–µ—Ç–æ—á–Ω—ã–π –∑–µ—Ñ–∏—Ä, —Ç–∞—è—â–∏–π –≤–æ —Ä—Ç—É —Å–æ –≤–∫—É—Å–æ–º –∫–æ–∫–æ—Å–∞", "media/marshmallows/marshmallow2.jpg"),
    ("–ü–∏—Ä–æ–∂–Ω—ã–µ", "–ú–µ–¥–æ–≤—ã–π", 35, "–í–æ–∑–¥—É—à–Ω–æ–µ –º–µ–¥–æ–≤–æ–µ —Ç–µ—Å—Ç–æ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º –¥–µ–∫–æ—Ä–æ–º", "media/pies/pie1.jpg"),
    ("–ü–∏—Ä–æ–∂–Ω—ã–µ", "–í–∏—à–Ω—è-—à–æ–∫–æ–ª–∞–¥", 35, "–í–æ–∑–¥—É—à–Ω–æ–µ –≤–∏—à–Ω–µ–≤–æ-—à–æ–∫–æ–ª–∞–¥–Ω–æ–µ —Ç–µ—Å—Ç–æ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º –¥–µ–∫–æ—Ä–æ–º", "media/pies/pie2.jpg"),
    )

    with Session(engine) as session:
        cats_map = {}

        for name in categories:
            category = session.scalar(select(Categories).where(Categories.category_name == name))
            if not category:
                category = Categories(category_name=name)
                session.add(category)
                session.flush()
            cats_map[name] = category.id

        for category_name, name, price, description, image in products:
            # product_exist = session.scalar(select(Products).where(Products.product_name == name))
            # if not product_exist:
             #   continue

            category_id = cats_map.get(category_name)
            if category_id:
                product = Products(
                    category_id = category_id,
                    product_name = name,
                    price = price,
                    description = description,
                    image = image
                )
                session.add(product)
        session.commit()
        print("–° –±–∞–∑–æ–π –≤—Å–µ: üëå")


if __name__ == "__main__":
    create_db()